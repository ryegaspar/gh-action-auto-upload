name: Tests

on:
    push:
        branches:
            - master
jobs:
    tests:
        name: Run Test & Deploy
        runs-on: ubuntu-latest
#        services:
#            mysql:
#                image: mysql:8.0.21
#                env:
#                    MYSQL_ROOT_PASSWORD: password
#                    MYSQL_DATABASE: cicd_test_test
#                ports:
#                    - 3306:3306
#                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        steps:
#            - uses: actions/checkout@v3
#            - run: mysql -h 127.0.0.1 --port 3306 -u root -ppassword -e 'CREATE DATABASE IF NOT EXISTS cicd_test_test;'
#
#            - name: Cache Composer Dependencies
#              uses: actions/cache@v3
#              with:
#                  path: vendor
#                  key: composer-${{ hashFiles('**/composer.lock') }}
#                  restore-keys: |
#                      composer-
#
#            - name: Cache Node Dependencies
#              uses: actions/cache@v3
#              with:
#                  path: node_modules
#                  key: node-${{ hashFiles('**/yarn.lock') }}
#                  restore-keys: |
#                      node-
#
#            - name: Install PHP
#              uses: shivammathur/setup-php@v2
#              with:
#                  php-version: "8.2"
#
#            - name: Copy .env file
#              run: cp .env.ci .env
#
#            - name: Install dependencies
#              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress
#
#            - name: Generate key
#              run: php artisan key:generate
#
#            - name: Directory Permissions
#              run: chmod -R 777 storage bootstrap/cache
#
#            - name: Use Node.js
#              uses: actions/setup-node@v3
#              with:
#                  node-version: '16.x'
#                  cache: 'yarn'
#
#            - name: Install NPM Dependencies
#              run: yarn && yarn build
#
#            - name: Run Insights
#              run: |
#                php artisan insights --no-interaction \
#                  --min-quality=90 --min-complexity=80 \
#                  --min-architecture=90 --min-style=90 \
#                  --ansi --format=github-action
#
#            - name: Run Pests
#              run: php artisan test
#              env:
#                  DB_PASSWORD: password
#
# SSH KEY is the id_rsa file
            - name: Copy SSH key
              uses: actions/checkout@v3
              run: |
                  echo "${{ secrets.SSH_KEY }}" >> ./id_rsa
                  chmod 600 id_rsa

# secure copy protocol, -i is the identity file, -C is for compression, -o is for options, StrictHostKeyChecking=no is to disable host key checking
            - name: Run deploy script
              run: |
                  scp -C -o StrictHostKeyChecking=no -i ./id_rsa ./deployment/deploy.sh ${{ secrets.SSH_CONNECTION }}:/home/ryan/deploy.sh
                  scp -C -o StrictHostKeyChecking=no -i ./id_rsa ./id_rsa ${{ secrets.SSH_CONNECTION }}:/home/ryan/.ssh/id_rsa
                  ssh -tt -o StrictHostKeyChecking=no -i ./id_rsa ${{ secrets.SSH_CONNECTION }} "chown ryan:ryan /home/ryan/deploy.sh && chmod +x /home/ryan/deploy.sh"
                  ssh -tt -o StrictHostKeyChecking=no -i ./id_rsa ${{ secrets.SSH_CONNECTION }} "/home/ryan/deploy.sh ${{ secrets.MYSQL_PASSWORD }}"
